font = {
    'A': [
        0b01110,
        0b10001,
        0b10001,
        0b11111,
        0b10001,
        0b10001,
        0b10001
    ],
    'B': [
        0b11110,
        0b10001,
        0b10001,
        0b11110,
        0b10001,
        0b10001,
        0b11110
    ],
    'C': [
        0b01110,
        0b10001,
        0b10000,
        0b10000,
        0b10000,
        0b10001,
        0b01110
    ],
    'D': [
        0b11110,
        0b10001,
        0b10001,
        0b10001,
        0b10001,
        0b10001,
        0b11110
    ],
    'E': [
        0b11111,
        0b10000,
        0b10000,
        0b11110,
        0b10000,
        0b10000,
        0b11111
    ],
    'F': [
        0b11111,
        0b10000,
        0b10000,
        0b11110,
        0b10000,
        0b10000,
        0b10000
    ],
    'G': [
        0b01110,
        0b10001,
        0b10000,
        0b10111,
        0b10001,
        0b10001,
        0b01111
    ],
    'H': [
        0b10001,
        0b10001,
        0b10001,
        0b11111,
        0b10001,
        0b10001,
        0b10001
    ],
    'I': [
        0b11111,
        0b00100,
        0b00100,
        0b00100,
        0b00100,
        0b00100,
        0b11111
    ],
    'J': [
        0b00111,
        0b00010,
        0b00010,
        0b00010,
        0b00010,
        0b10010,
        0b01100
    ],
    'K': [
        0b10001,
        0b10010,
        0b10100,
        0b11000,
        0b10100,
        0b10010,
        0b10001
    ],
    'L': [
        0b10000,
        0b10000,
        0b10000,
        0b10000,
        0b10000,
        0b10000,
        0b11111
    ],
    'M': [
        0b10001,
        0b11011,
        0b10101,
        0b10101,
        0b10001,
        0b10001,
        0b10001
    ],
    'N': [
        0b10001,
        0b11001,
        0b10101,
        0b10101,
        0b10011,
        0b10001,
        0b10001
    ],
    'O': [
        0b01110,
        0b10001,
        0b10001,
        0b10001,
        0b10001,
        0b10001,
        0b01110
    ],
    'P': [
        0b11110,
        0b10001,
        0b10001,
        0b11110,
        0b10000,
        0b10000,
        0b10000
    ],
    'Q': [
        0b01110,
        0b10001,
        0b10001,
        0b10001,
        0b10101,
        0b10010,
        0b01101
    ],
    'R': [
        0b11110,
        0b10001,
        0b10001,
        0b11110,
        0b10100,
        0b10010,
        0b10001
    ],
    'S': [
        0b01111,
        0b10000,
        0b10000,
        0b01110,
        0b00001,
        0b00001,
        0b11110
    ],
    'T': [
        0b11111,
        0b00100,
        0b00100,
        0b00100,
        0b00100,
        0b00100,
        0b00100
    ],
    'U': [
        0b10001,
        0b10001,
        0b10001,
        0b10001,
        0b10001,
        0b10001,
        0b01110
    ],
    'V': [
        0b10001,
        0b10001,
        0b10001,
        0b10001,
        0b10001,
        0b01010,
        0b00100
    ],
    'W': [
        0b10001,
        0b10001,
        0b10001,
        0b10101,
        0b10101,
        0b11011,
        0b10001
    ],
    'X': [
        0b10001,
        0b10001,
        0b01010,
        0b00100,
        0b01010,
        0b10001,
        0b10001
    ],
    'Y': [
        0b10001,
        0b10001,
        0b01010,
        0b00100,
        0b00100,
        0b00100,
        0b00100
    ],
    'Z': [
        0b11111,
        0b00001,
        0b00010,
        0b00100,
        0b01000,
        0b10000,
        0b11111
    ],
    '0': [
        0b01110,
        0b10001,
        0b10011,
        0b10101,
        0b11001,
        0b10001,
        0b01110
    ],
    '1': [
        0b00100,
        0b01100,
        0b00100,
        0b00100,
        0b00100,
        0b00100,
        0b01110
    ],
    '2': [
        0b01110,
        0b10001,
        0b00001,
        0b00010,
        0b00100,
        0b01000,
        0b11111
    ],
    '3': [
        0b11111,
        0b00010,
        0b00100,
        0b00010,
        0b00001,
        0b10001,
        0b01110
    ],
    '4': [
        0b00010,
        0b00110,
        0b01010,
        0b10010,
        0b11111,
        0b00010,
        0b00010
    ],
    '5': [
        0b11111,
        0b10000,
        0b11110,
        0b00001,
        0b00001,
        0b10001,
        0b01110
    ],
    '6': [
        0b00110,
        0b01000,
        0b10000,
        0b11110,
        0b10001,
        0b10001,
        0b01110
    ],
    '7': [
        0b11111,
        0b00001,
        0b00010,
        0b00100,
        0b01000,
        0b01000,
        0b01000
    ],
    '8': [
        0b01110,
        0b10001,
        0b10001,
        0b01110,
        0b10001,
        0b10001,
        0b01110
    ],
    '9': [
        0b01110,
        0b10001,
        0b10001,
        0b01111,
        0b00001,
        0b00010,
        0b01100
    ],
    ' ': [
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00000
    ],
    '.': [
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00100
    ],
    ',': [
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00000,
        0b00100,
        0b01000
    ],
    '!': [
        0b00100,
        0b00100,
        0b00100,
        0b00100,
        0b00100,
        0b00000,
        0b00100
    ],
    '?': [
        0b01110,
        0b10001,
        0b00001,
        0b00010,
        0b00100,
        0b00000,
        0b00100
    ],
    ':': [
        0b00000,
        0b00000,
        0b00100,
        0b00000,
        0b00000,
        0b00100,
        0b00000
    ],
    '-': [
        0b00000,
        0b00000,
        0b00000,
        0b11111,
        0b00000,
        0b00000,
        0b00000
    ],
    '+': [
        0b00000,
        0b00100,
        0b00100,
        0b11111,
        0b00100,
        0b00100,
        0b00000
    ],
    '*': [
        0b00000,
        0b10101,
        0b01110,
        0b11111,
        0b01110,
        0b10101,
        0b00000
    ]
}

def draw_character(image, char_offset, char_data):
    char_width = 5
    char_height = 7
    width = len(image[0])
    height = len(image)
    skip_x = 1 + char_offset * (char_width + 1)
    top_margin = 4

    for row_index in range(char_height):
        char_row_bits = char_data[row_index]
        for col_index in range(char_width):
            pixel = (char_row_bits >> (4 - col_index)) & 1
            if pixel:
                img_x = skip_x + col_index
                img_y = row_index + top_margin
                if 0 <= img_x < width and 0 <= img_y < height:
                    image[img_y][img_x] = (255, 0, 0)  # red pixel
                else:
                    raise Exception('Pixel {} out of bounds'.format(row_index))


def create_text_ppm(text, output_file="output.ppm", width=32, height=16):
    image = [[(0, 0, 0) for _ in range(width)] for _ in range(height)]

    for char_offset, char in enumerate(text):
        if char.upper() not in font:
            raise Exception(f"Unknown character {char}")
        char_data = font[char.upper()]
        draw_character(image, char_offset, char_data)

    with open(output_file, 'wb') as f:
        # PPM header
        f.write(b"P6\n32 16\n255\n")
        # Image contents
        for row in image:
            for pixel in row:
                f.write(bytes(pixel))

# Example usage
if __name__ == "__main__":
    create_text_ppm("8:45a")
